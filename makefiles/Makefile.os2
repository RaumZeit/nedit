# $Id: Makefile.os2,v 1.2 2001/02/26 23:38:03 edg Exp $
#
# Makefile for NEdit with XFree86 OS/2
#
# From the toplevel directory just call 
#   make -f makefiles/Makefile.os2
#

.PHONY: init default

# toplevel default target 
default: init

init: util/Makefile.os2 source/Makefile.os2 build

util/Makefile.os2 source/Makefile.os2 : makefiles/Makefile.os2
	cp $< $@

build:
	cd util   && $(MAKE) -f Makefile.os2 all BUILD=1
	cd source && $(MAKE) -f Makefile.os2 all BUILD=1

CC=gcc
AR=ar

# For editres, add -DEDITRES to CFLAGS and -lXmu to LIBS
CFLAGS=-Zmt -O1 -g -I$(X11ROOT)/XFree86/include -DUSE_DIRENT -DUSE_LPR_PRINT_CMD -DEDITRES -DNO_FCHMOD
#CFLAGS=-Zmt -O3 -m486 -g -Wall -Wno-unused -I$(X11ROOT)/XFree86/include -DUSE_DIRENT -DUSE_LPR_PRINT_CMD -DEDITRES -DNO_FCHMOD
ARFLAGS=-urs
LIBS= -Zmtd -Zexe -g -Zsysv-signals -L$(X11ROOT)/XFree86/lib -lXm -lXpm -lXext -lXt -lXmu -lSM -lICE -lX11
#LIBS= -Zmtd -s -Zexe -L$(X11ROOT)/XFree86/lib -lXm -lXpm -lXext -lXt -lXmu -lSM -lICE -lX11


ifeq ($(BUILD),1)
include Makefile.common
endif

# Have a second way to build NEdit, nc with OMF objects.
# Advantage is using link386 with executable compression, etc.
OBJS2=$(OBJS:.o=.obj)

CFLAGS2=$(CFLAGS) -Zomf
LIBS2= -Zmtd -s -Zomf -Zlinker /PM:VIO -Zlinker /E:2 -Zsysv-signals \
       -L$(X11ROOT)/XFree86/lib -lXm -lXpm -lXext -lXt -lXmu -lSM -lICE -lX11

nedit.exe: $(OBJS2) ..\util\libNUtil.lib
	$(CC) -o $@ $^ $(LIBS2)

nc.exe: nc.obj ..\util\libNUtil.lib
	$(CC) -o $@ $^ $(LIBS2)

libNUtil.lib: ..\util\libNUtil.a
	emxomf $<

%.obj: %.o
	emxomf $<

%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

%.obj: %.c
	$(CC) $(CFLAGS2) -c -o $@ $<
