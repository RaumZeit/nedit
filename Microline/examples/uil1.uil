/* -*- Mode: C; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Microline Widget Library, originally made available under the NPL by Neuron Data <http://www.neurondata.com>.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * In addition, as a special exception to the GNU GPL, the copyright holders
 * give permission to link the code of this program with the Motif and Open
 * Motif libraries (or with modified versions of these that use the same
 * license), and distribute linked combinations including the two. You
 * must obey the GNU General Public License in all respects for all of
 * the code used other than linking with Motif/Open Motif. If you modify
 * this file, you may extend this exception to your version of the file,
 * but you are not obligated to do so. If you do not wish to do so,
 * delete this exception statement from your version.
 *
 * ***** END LICENSE BLOCK ***** */



module uil1
version = 'v1.0'
names = case_sensitive

include file 'XmL/XmL.uih';

value
	grey        : color('#C0C0C0', background);						
	lightGrey   : color('#E0E0E0', background);						
	black       : color('#000000', foreground);
	white       : color('#FFFFFF', background);
	darkBlue    : color('#000080', foreground);

object shellForm : 
XmForm {
	arguments {
		XmNbackground = grey;
		XmNmarginWidth = 10;
		XmNmarginHeight = 10;
		XmNshadowThickness = 0;
	};
	controls {
		user_defined folder;
	};
};

object folder : 
user_defined procedure XmLCreateFolder {
	arguments {
		XmNbackground = grey;
		XmNforeground = black;
		XmNtabsPerRow = 2;
		XmNtopAttachment = XmATTACH_FORM;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNleftAttachment = XmATTACH_FORM;
		XmNrightAttachment = XmATTACH_FORM;
	};
	controls {
		XmDrawnButton tabOne;
		XmDrawnButton tabTwo;
		XmDrawnButton tabThree;
		XmDrawnButton tabFour;
		XmForm folderForm;
	};
};

object tabOne: 
XmDrawnButton {
	arguments {
		XmNlabelString = compound_string('Configuration');
	};
};

object tabTwo: 
XmDrawnButton {
	arguments {
		XmNlabelString = compound_string('Settings');
	};
};

object tabThree: 
XmDrawnButton {
	arguments {
		XmNlabelString = compound_string('Resources');
	};
};

object tabFour: 
XmDrawnButton {
	arguments {
		XmNlabelString = compound_string('Hardware Types');
	};
};

object folderForm : 
XmForm {
	arguments {
		XmNbackground = grey;
		XmNhorizontalSpacing = 10;
		XmNverticalSpacing = 10;
	};
	controls {
		user_defined tree;
		user_defined grid;
		user_defined progress;
	};
};

object tree : 
user_defined procedure XmLCreateTree {
	arguments {
		XmNbackground = grey;
		XmNforeground = black;
		XmNleftAttachment = XmATTACH_FORM;
		XmNrightAttachment = XmATTACH_FORM;
		XmNtopAttachment = XmATTACH_FORM;
		XmNbottomAttachment = XmATTACH_POSITION;
		XmNbottomPosition = 25;
	};
};

object grid : 
user_defined procedure XmLCreateGrid {
	arguments {
		XmNbackground = grey;
		XmNforeground = black;
		XmNselectBackground = darkBlue;
		XmNselectForeground = white;
		XmNleftAttachment = XmATTACH_FORM;
		XmNrightAttachment = XmATTACH_FORM;
		XmNtopAttachment = XmATTACH_POSITION;
		XmNtopPosition = 30;
		XmNbottomAttachment = XmATTACH_POSITION;
		XmNbottomPosition = 80;
		XmNcolumns = 5;
		XmNheadingRows = 1;
		XmNsimpleHeadings = "Name|Width|Height|X|Y";
		XmNsimpleWidths = "20c 10c 10c 8c 8c";
		XmNrows = 20;
		XmNleftFixedCount = 1;
	};
};

object progress : 
user_defined procedure XmLCreateProgress {
	arguments {
		XmNtopShadowColor = lightGrey;
		XmNbottomShadowColor = black;
		XmNbackground = white;
		XmNforeground = darkBlue;
		XmNleftAttachment = XmATTACH_FORM;
		XmNrightAttachment = XmATTACH_FORM;
		XmNtopAttachment = XmATTACH_POSITION;
		XmNtopPosition = 85;
		XmNheight = 20;
		XmNshadowThickness = 1;
		XmNmeterStyle = MeterBoxes;
		XmNnumBoxes = 20;
		XmNvalue = 70;
		XmNcompleteValue = 200;
	};
};

end module;
